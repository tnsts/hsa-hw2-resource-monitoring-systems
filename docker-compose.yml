version: "3.8"

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - demoapp-network

  mongodb:
    container_name: mongodb
    image: mongo:8.0.0-rc13-jammy
    hostname: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    env_file: .env
    volumes:
      - mongodb-data:/data/db
    networks:
      - demoapp-network

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.14.3
    hostname: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    env_file: .env
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - demoapp-network

  application:
    container_name: demo-app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file: .env
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - demoapp-network

  telegraf:
    image: telegraf:1.31.0-alpine
    env_file: .env
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '8125:8125/udp'
    networks:
      - demoapp-network
    entrypoint: sh -c "chmod 666 /var/run/docker.sock && telegraf"

  influxdb:
    image: influxdb:1.8-alpine
    env_file: .env
    ports:
      - '8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - demoapp-network

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: .env
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - demoapp-network

networks:
  demoapp-network:
    driver: bridge

volumes:
  mongodb-data:
  elasticsearch-data:
  grafana_data:
  influxdb_data: